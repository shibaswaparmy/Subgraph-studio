// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ExitCancelled extends ethereum.Event {
  get params(): ExitCancelled__Params {
    return new ExitCancelled__Params(this);
  }
}

export class ExitCancelled__Params {
  _event: ExitCancelled;

  constructor(event: ExitCancelled) {
    this._event = event;
  }

  get exitId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ExitPeriodUpdate extends ethereum.Event {
  get params(): ExitPeriodUpdate__Params {
    return new ExitPeriodUpdate__Params(this);
  }
}

export class ExitPeriodUpdate__Params {
  _event: ExitPeriodUpdate;

  constructor(event: ExitPeriodUpdate) {
    this._event = event;
  }

  get oldExitPeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newExitPeriod(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ExitStarted extends ethereum.Event {
  get params(): ExitStarted__Params {
    return new ExitStarted__Params(this);
  }
}

export class ExitStarted__Params {
  _event: ExitStarted;

  constructor(event: ExitStarted) {
    this._event = event;
  }

  get exitor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get exitId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get isRegularExit(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class ExitUpdated extends ethereum.Event {
  get params(): ExitUpdated__Params {
    return new ExitUpdated__Params(this);
  }
}

export class ExitUpdated__Params {
  _event: ExitUpdated;

  constructor(event: ExitUpdated) {
    this._event = event;
  }

  get exitId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get age(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get signer(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class WithdrawManagerOwnershipTransferred extends ethereum.Event {
  get params(): WithdrawManagerOwnershipTransferred__Params {
    return new WithdrawManagerOwnershipTransferred__Params(this);
  }
}

export class WithdrawManagerOwnershipTransferred__Params {
  _event: WithdrawManagerOwnershipTransferred;

  constructor(event: WithdrawManagerOwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get exitId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class WithdrawManager__exitsResult {
  value0: BigInt;
  value1: Bytes;
  value2: Address;
  value3: Address;
  value4: boolean;
  value5: Address;

  constructor(
    value0: BigInt,
    value1: Bytes,
    value2: Address,
    value3: Address,
    value4: boolean,
    value5: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    return map;
  }

  getReceiptAmountOrNFTId(): BigInt {
    return this.value0;
  }

  getTxHash(): Bytes {
    return this.value1;
  }

  getOwner(): Address {
    return this.value2;
  }

  getToken(): Address {
    return this.value3;
  }

  getIsRegularExit(): boolean {
    return this.value4;
  }

  getPredicate(): Address {
    return this.value5;
  }
}

export class WithdrawManager extends ethereum.SmartContract {
  static bind(address: Address): WithdrawManager {
    return new WithdrawManager("WithdrawManager", address);
  }

  HALF_EXIT_PERIOD(): BigInt {
    let result = super.call(
      "HALF_EXIT_PERIOD",
      "HALF_EXIT_PERIOD():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_HALF_EXIT_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "HALF_EXIT_PERIOD",
      "HALF_EXIT_PERIOD():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ON_FINALIZE_GAS_LIMIT(): BigInt {
    let result = super.call(
      "ON_FINALIZE_GAS_LIMIT",
      "ON_FINALIZE_GAS_LIMIT():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_ON_FINALIZE_GAS_LIMIT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ON_FINALIZE_GAS_LIMIT",
      "ON_FINALIZE_GAS_LIMIT():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  exitNft(): Address {
    let result = super.call("exitNft", "exitNft():(address)", []);

    return result[0].toAddress();
  }

  try_exitNft(): ethereum.CallResult<Address> {
    let result = super.tryCall("exitNft", "exitNft():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  exitWindow(): BigInt {
    let result = super.call("exitWindow", "exitWindow():(uint256)", []);

    return result[0].toBigInt();
  }

  try_exitWindow(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("exitWindow", "exitWindow():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  exits(param0: BigInt): WithdrawManager__exitsResult {
    let result = super.call(
      "exits",
      "exits(uint256):(uint256,bytes32,address,address,bool,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new WithdrawManager__exitsResult(
      result[0].toBigInt(),
      result[1].toBytes(),
      result[2].toAddress(),
      result[3].toAddress(),
      result[4].toBoolean(),
      result[5].toAddress()
    );
  }

  try_exits(param0: BigInt): ethereum.CallResult<WithdrawManager__exitsResult> {
    let result = super.tryCall(
      "exits",
      "exits(uint256):(uint256,bytes32,address,address,bool,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new WithdrawManager__exitsResult(
        value[0].toBigInt(),
        value[1].toBytes(),
        value[2].toAddress(),
        value[3].toAddress(),
        value[4].toBoolean(),
        value[5].toAddress()
      )
    );
  }

  exitsQueues(param0: Address): Address {
    let result = super.call("exitsQueues", "exitsQueues(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_exitsQueues(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "exitsQueues",
      "exitsQueues(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isOwner(): boolean {
    let result = super.call("isOwner", "isOwner():(bool)", []);

    return result[0].toBoolean();
  }

  try_isOwner(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isOwner", "isOwner():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerExits(param0: Bytes): BigInt {
    let result = super.call("ownerExits", "ownerExits(bytes32):(uint256)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toBigInt();
  }

  try_ownerExits(param0: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall("ownerExits", "ownerExits(bytes32):(uint256)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  verifyInclusion(
    data: Bytes,
    offset: i32,
    verifyTxInclusion: boolean
  ): BigInt {
    let result = super.call(
      "verifyInclusion",
      "verifyInclusion(bytes,uint8,bool):(uint256)",
      [
        ethereum.Value.fromBytes(data),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(offset)),
        ethereum.Value.fromBoolean(verifyTxInclusion)
      ]
    );

    return result[0].toBigInt();
  }

  try_verifyInclusion(
    data: Bytes,
    offset: i32,
    verifyTxInclusion: boolean
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "verifyInclusion",
      "verifyInclusion(bytes,uint8,bool):(uint256)",
      [
        ethereum.Value.fromBytes(data),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(offset)),
        ethereum.Value.fromBoolean(verifyTxInclusion)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class AddExitToQueueCall extends ethereum.Call {
  get inputs(): AddExitToQueueCall__Inputs {
    return new AddExitToQueueCall__Inputs(this);
  }

  get outputs(): AddExitToQueueCall__Outputs {
    return new AddExitToQueueCall__Outputs(this);
  }
}

export class AddExitToQueueCall__Inputs {
  _call: AddExitToQueueCall;

  constructor(call: AddExitToQueueCall) {
    this._call = call;
  }

  get exitor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get childToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get rootToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get exitAmountOrTokenId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get txHash(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get isRegularExit(): boolean {
    return this._call.inputValues[5].value.toBoolean();
  }

  get priority(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class AddExitToQueueCall__Outputs {
  _call: AddExitToQueueCall;

  constructor(call: AddExitToQueueCall) {
    this._call = call;
  }
}

export class AddInputCall extends ethereum.Call {
  get inputs(): AddInputCall__Inputs {
    return new AddInputCall__Inputs(this);
  }

  get outputs(): AddInputCall__Outputs {
    return new AddInputCall__Outputs(this);
  }
}

export class AddInputCall__Inputs {
  _call: AddInputCall;

  constructor(call: AddInputCall) {
    this._call = call;
  }

  get exitId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get age(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get utxoOwner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class AddInputCall__Outputs {
  _call: AddInputCall;

  constructor(call: AddInputCall) {
    this._call = call;
  }
}

export class ChallengeExitCall extends ethereum.Call {
  get inputs(): ChallengeExitCall__Inputs {
    return new ChallengeExitCall__Inputs(this);
  }

  get outputs(): ChallengeExitCall__Outputs {
    return new ChallengeExitCall__Outputs(this);
  }
}

export class ChallengeExitCall__Inputs {
  _call: ChallengeExitCall;

  constructor(call: ChallengeExitCall) {
    this._call = call;
  }

  get exitId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get inputId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get challengeData(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get adjudicatorPredicate(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ChallengeExitCall__Outputs {
  _call: ChallengeExitCall;

  constructor(call: ChallengeExitCall) {
    this._call = call;
  }
}

export class CreateExitQueueCall extends ethereum.Call {
  get inputs(): CreateExitQueueCall__Inputs {
    return new CreateExitQueueCall__Inputs(this);
  }

  get outputs(): CreateExitQueueCall__Outputs {
    return new CreateExitQueueCall__Outputs(this);
  }
}

export class CreateExitQueueCall__Inputs {
  _call: CreateExitQueueCall;

  constructor(call: CreateExitQueueCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CreateExitQueueCall__Outputs {
  _call: CreateExitQueueCall;

  constructor(call: CreateExitQueueCall) {
    this._call = call;
  }
}

export class ProcessExitsCall extends ethereum.Call {
  get inputs(): ProcessExitsCall__Inputs {
    return new ProcessExitsCall__Inputs(this);
  }

  get outputs(): ProcessExitsCall__Outputs {
    return new ProcessExitsCall__Outputs(this);
  }
}

export class ProcessExitsCall__Inputs {
  _call: ProcessExitsCall;

  constructor(call: ProcessExitsCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ProcessExitsCall__Outputs {
  _call: ProcessExitsCall;

  constructor(call: ProcessExitsCall) {
    this._call = call;
  }
}

export class ProcessExitsBatchCall extends ethereum.Call {
  get inputs(): ProcessExitsBatchCall__Inputs {
    return new ProcessExitsBatchCall__Inputs(this);
  }

  get outputs(): ProcessExitsBatchCall__Outputs {
    return new ProcessExitsBatchCall__Outputs(this);
  }
}

export class ProcessExitsBatchCall__Inputs {
  _call: ProcessExitsBatchCall;

  constructor(call: ProcessExitsBatchCall) {
    this._call = call;
  }

  get _tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class ProcessExitsBatchCall__Outputs {
  _call: ProcessExitsBatchCall;

  constructor(call: ProcessExitsBatchCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class StartExitWithDepositedTokensCall extends ethereum.Call {
  get inputs(): StartExitWithDepositedTokensCall__Inputs {
    return new StartExitWithDepositedTokensCall__Inputs(this);
  }

  get outputs(): StartExitWithDepositedTokensCall__Outputs {
    return new StartExitWithDepositedTokensCall__Outputs(this);
  }
}

export class StartExitWithDepositedTokensCall__Inputs {
  _call: StartExitWithDepositedTokensCall;

  constructor(call: StartExitWithDepositedTokensCall) {
    this._call = call;
  }

  get depositId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amountOrToken(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class StartExitWithDepositedTokensCall__Outputs {
  _call: StartExitWithDepositedTokensCall;

  constructor(call: StartExitWithDepositedTokensCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateExitPeriodCall extends ethereum.Call {
  get inputs(): UpdateExitPeriodCall__Inputs {
    return new UpdateExitPeriodCall__Inputs(this);
  }

  get outputs(): UpdateExitPeriodCall__Outputs {
    return new UpdateExitPeriodCall__Outputs(this);
  }
}

export class UpdateExitPeriodCall__Inputs {
  _call: UpdateExitPeriodCall;

  constructor(call: UpdateExitPeriodCall) {
    this._call = call;
  }

  get halfExitPeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateExitPeriodCall__Outputs {
  _call: UpdateExitPeriodCall;

  constructor(call: UpdateExitPeriodCall) {
    this._call = call;
  }
}
